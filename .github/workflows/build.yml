name: Build Windows Application

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-windows-app:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install pygame
        # Add any other dependencies your app needs
        if (Test-Path requirements.txt) { pip install -r requirements.txt }
      shell: powershell
    
    - name: Verify files exist
      run: |
        echo "Checking for main files..."
        if (Test-Path main.py) { echo "✓ main.py found" } else { echo "✗ main.py not found"; exit 1 }
        if (Test-Path bomb_game.pyd) { echo "✓ bomb_game.pyd found" } else { echo "✗ bomb_game.pyd not found" }
        Get-ChildItem -Name
      shell: powershell
    
    - name: Build Windows executable
      run: |
        pyinstaller --onefile --windowed --noconsole `
          --add-data "bomb_game.pyd;." `
          --name "BeatTheBomb" `
          --icon=icon.ico `
          --distpath dist `
          --workpath build `
          --specpath . `
          main.py
      shell: powershell
      continue-on-error: false
    
    - name: Create installer (optional)
      run: |
        # Create a simple batch installer
        @"
        @echo off
        echo Installing Beat the Bomb...
        mkdir "%USERPROFILE%\Games\BeatTheBomb" 2>nul
        copy "BeatTheBomb.exe" "%USERPROFILE%\Games\BeatTheBomb\"
        echo Creating desktop shortcut...
        powershell -Command "$$WshShell = New-Object -comObject WScript.Shell; $$Shortcut = $$WshShell.CreateShortcut('$$env:USERPROFILE\Desktop\Beat the Bomb.lnk'); $$Shortcut.TargetPath = '$$env:USERPROFILE\Games\BeatTheBomb\BeatTheBomb.exe'; $$Shortcut.Save()"
        echo Installation complete!
        pause
        "@ | Out-File -FilePath "dist/install.bat" -Encoding ASCII
      shell: powershell
    
    - name: Create portable zip package
      run: |
        Compress-Archive -Path "dist/BeatTheBomb.exe", "dist/install.bat" -DestinationPath "dist/BeatTheBomb-Windows-Portable.zip"
      shell: powershell
    
    - name: Upload Windows executable
      uses: actions/upload-artifact@v3
      with:
        name: BeatTheBomb-Windows
        path: |
          dist/BeatTheBomb.exe
          dist/install.bat
          dist/BeatTheBomb-Windows-Portable.zip
        retention-days: 30
    
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/BeatTheBomb.exe
          dist/BeatTheBomb-Windows-Portable.zip
        name: Beat the Bomb ${{ github.ref_name }}
        body: |
          ## Beat the Bomb - Windows Release
          
          ### Downloads:
          - **BeatTheBomb.exe** - Standalone executable
          - **BeatTheBomb-Windows-Portable.zip** - Portable package with installer
          
          ### Installation:
          1. Download `BeatTheBomb-Windows-Portable.zip`
          2. Extract the zip file
          3. Run `install.bat` for automatic installation
          4. Or simply run `BeatTheBomb.exe` directly
          
          ### System Requirements:
          - Windows 10 or later
          - No additional software required
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-executable:
    needs: build-windows-app
    runs-on: windows-latest
    
    steps:
    - name: Download built executable
      uses: actions/download-artifact@v3
      with:
        name: BeatTheBomb-Windows
    
    - name: Test executable launches
      run: |
        echo "Testing if executable can start..."
        # Test if the exe file exists and is executable
        if (Test-Path "BeatTheBomb.exe") {
          echo "✓ Executable found"
          # You can add more tests here, like checking file size, etc.
          $fileInfo = Get-Item "BeatTheBomb.exe"
          echo "File size: $($fileInfo.Length) bytes"
        } else {
          echo "✗ Executable not found"
          exit 1
        }
      shell: powershell
